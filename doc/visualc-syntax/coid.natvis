<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

<Type Name="coid::charstr">
    <DisplayString Condition="_tstr._ptr == 0">"" (null)</DisplayString>
    <DisplayString Condition="((size_t*)_tstr._ptr)[-1] == 0">"" (size=0)</DisplayString>
    <DisplayString>{_tstr._ptr,s8} (size={((size_t*)_tstr._ptr)[-1] - 1})</DisplayString>
    <StringView>_tstr._ptr,s8</StringView>
</Type>

<Type Name="coid::token">
    <DisplayString Condition="_ptr == 0">"" (null)</DisplayString>
    <DisplayString Condition="_ptr == _pte">"" (size=0)</DisplayString>
    <DisplayString>{_ptr,[_pte-_ptr]s8} (size={_pte-_ptr})</DisplayString>
</Type>

<Type Name="coid::zstring">
    <DisplayString Condition="_buf != 0">{((size_t*)_buf->_tstr._ptr)[-1] - 1} {_buf->_tstr._ptr,s8}</DisplayString>
    <DisplayString Condition="_zptr == 0">0 "" (null)</DisplayString>
    <DisplayString Condition="_zptr == _zend">0 ""</DisplayString>
    <DisplayString>size = {_zend-_zptr} {_zptr,[_zend-_zptr]s8}</DisplayString>
</Type>

<Type Name="coid::opcd">
    <DisplayString>code={_ptr->_code} {_ptr->_desc,s}</DisplayString>
</Type>

<Type Name="coid::exception">
    <DisplayString Condition="_dtext._tstr._ptr == 0">{_stext._ptr,[_stext._pte-_stext._ptr]s8}</DisplayString>
    <DisplayString>{_dtext._tstr._ptr,s8}</DisplayString>
</Type>

<Type Name="coid::dynarray&lt;*,*,*&gt;">
    <DisplayString Condition="_ptr == 0">size = 0</DisplayString>
    <DisplayString>size = {((size_t*)_ptr)[-1]}</DisplayString>
    <Expand>
        <Item Name="[size]" ExcludeView="simple" Condition="_ptr">((size_t*)_ptr)[-1]</Item>
        <Item Name="[size]" ExcludeView="simple" Condition="!_ptr">0</Item>
        <Item Name="[capacity]" ExcludeView="simple">_ptr ? ((size_t*)_ptr)[-2] : 0/sizeof(*_ptr)</Item>
        <ArrayItems>
            <Size>_ptr ? ((size_t*)_ptr)[-1] : 0</Size>
            <ValuePointer>_ptr</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="coid::range&lt;*&gt;">
    <DisplayString>size = {_pte - _ptr}</DisplayString>
    <Expand>
        <Item Name="[size]" ExcludeView="simple">_pte - _ptr</Item>
        <ArrayItems>
            <Size>_pte - _ptr</Size>
            <ValuePointer>_ptr</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="coid::slotalloc_base&lt;*,*&gt;">
    <DisplayString>size = {_count}</DisplayString>
</Type>

<Type Name="coid::slotalloc&lt;*,*&gt;">
    <DisplayString>size = {_count}</DisplayString>
</Type>

<Type Name="ref&lt;*&gt;">
    <SmartPointer Usage="Minimal">_o</SmartPointer>
    <DisplayString Condition="_o == 0">{{empty}}</DisplayString>
    <DisplayString>{_o,x}</DisplayString>
    <Expand>
        <Item Name="[object]" ExcludeView="simple" Condition="_o != 0"> _o </Item>
        <Item Name="[refcount]" ExcludeView="simple" Condition="_p != 0"> _p->_count</Item>
    </Expand>
</Type>

<Type Name="iref&lt;*&gt;">
    <SmartPointer Usage="Minimal">_p</SmartPointer>
    <DisplayString Condition="_p == 0">{{empty}}</DisplayString>
    <DisplayString>{_p,x}</DisplayString>
</Type>

<Type Name="vref&lt;*&gt;">
    <SmartPointer Usage="Minimal">($T1*)(_vptr &amp; vref&lt;$T1&gt;::ptr_mask)</SmartPointer>
    <DisplayString Condition="_vptr == 0">{{empty}}</DisplayString>
    <DisplayString>version = {_vptr &gt;&gt; vref&lt;$T1&gt;::vshift}, pointer = {(_vptr &amp; vref&lt;$T1&gt;::ptr_mask),x}</DisplayString>
    <Expand>
        <Item Name="[version]" ExcludeView="simple" >_vptr &gt;&gt; 48</Item>
        <Item Name="[pointer]" ExcludeView="simple">reinterpret_cast&lt;$T1*&gt;(_vptr &amp; vref&lt;$T1&gt;::ptr_mask)</Item>
    </Expand>
</Type>

<Type Name="coid::local&lt;*&gt;">
    <SmartPointer Usage="Minimal">_p</SmartPointer>
    <DisplayString Condition="_p == 0">{{empty}}</DisplayString>
    <DisplayString>{_p,x}</DisplayString>
</Type>

<Type Name="coid::unique_ptr&lt;*&gt;">
    <SmartPointer Usage="Minimal">_p</SmartPointer>
    <DisplayString Condition="_p == 0">{{empty}}</DisplayString>
    <DisplayString>{_p,x}</DisplayString>
</Type>	
	
<Type Name="coid::versionid">
  <DisplayString Condition="mark == 0">{{empty}}</DisplayString>
  <DisplayString Condition="mark != 0x5c">{{corrupt}}</DisplayString>
  <DisplayString>id = {idx,x}</DisplayString>
  <Expand>
    <Item Name="[id]" ExcludeView="simple">idx</Item>
    <Item Name="[version]" ExcludeView="simple" >version</Item>
  </Expand>
</Type>

<Type Name="coid::typed_versionid&lt;*&gt;">
  <DisplayString Condition="mark == 0">{{empty}}</DisplayString>
  <DisplayString Condition="mark != 0x5c">{{corrupt}}</DisplayString>
  <DisplayString>id = {idx,x}</DisplayString>
  <Expand>
    <Item Name="[id]" ExcludeView="simple">idx</Item>
    <Item Name="[version]" ExcludeView="simple" >version</Item>
  </Expand>
</Type>

</AutoVisualizer>

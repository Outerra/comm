
#ifndef __INTERGEN_GENERATED__thingface_H__
#define __INTERGEN_GENERATED__thingface_H__

//@file Interface file for thingface interface generated by the intergen tool

#include <comm/interface.h>
#include <comm/commexception.h>
#include <intergen/ifc.h>

namespace ifc1 {
namespace ifc2 {

////////////////////////////////////////////////////////////////////////////////
class thingface
    : public intergen_interface
{
protected:
    typedef void (*cleanup_fn)(thingface*, intergen_interface*);
    cleanup_fn _cleaner;

    thingface() : _cleaner(0)
    {}
    
    ~thingface() {
        VT_CALLVOID(void,(),0)();
        if(_cleaner) _cleaner(this,0);
    }

public:

    ///class id
    static const int hashid = 2012066119;

    // --- creators ---

    static iref<thingface> get() {
        return get<thingface>(0);
    }

    template<class T>
    static iref<T> get( T* here );

    // --- interface methods ---

    int hallo( int a, const coid::token& b, coid::charstr& c );

    coid::charstr fallo( bool b, const char* str );

    // --- interface events ---

    virtual void boo( const char* key ) {}
};


////////////////////////////////////////////////////////////////////////////////
template<class T>
inline iref<T> thingface::get( T* here )
{
    typedef iref<T> (*fn_creator)(thingface*);

    static fn_creator create = 0;

    if(!create) {
        create = reinterpret_cast<fn_creator>(
            coid::interface_register::get_interface_creator("ifc1::ifc2::thingface::get@2012066119"));
    }

    if(!create)
        throw coid::exception("interface creator inaccessible");

    return create(here);
}


inline int thingface::hallo( int a, const coid::token& b, coid::charstr& c )
{ VT_CALL(int,(int,const coid::token&,coid::charstr&),1)(a,b,c); }

inline coid::charstr thingface::fallo( bool b, const char* str )
{ VT_CALL(coid::charstr,(bool,const char*),2)(b,str); }

} //namespace
} //namespace

#endif //__INTERGEN_GENERATED__thingface_H__
